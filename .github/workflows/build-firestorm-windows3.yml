name: Build Firestorm Windows (No Package)

on:
  workflow_dispatch:
    inputs:
      branch_or_tag:
        description: 'Build target branch or tag'
        required: true
        default: '7.2.0_preview'
      enable_libvlc:
        description: "Enable LibVLC support"
        required: true
        default: "true"
      libvlc_sdk_url:
        description: "URL of LibVLC SDK (7z/zip)"
        required: true
        default: "https://download.videolan.org/pub/videolan/vlc/3.0.9.2/win64/vlc-3.0.9.2-win64.7z"

jobs:
  build:
    runs-on: windows-2022

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch_or_tag }}

      - name: Install dependencies
        run: |
          choco install 7zip --no-progress -y
          choco install python3 --no-progress -y
        shell: pwsh

      - name: Download and Extract LibVLC
        if: ${{ github.event.inputs.enable_libvlc == 'true' }}
        run: |
          mkdir _temp
          curl -L "${{ github.event.inputs.libvlc_sdk_url }}" -o _temp/libvlc.7z
          mkdir _temp/libvlc_pkg
          7z x _temp/libvlc.7z -o_temp/libvlc_pkg
        shell: pwsh

      - name: Set Environment Variables
        run: |
          echo "LIBVLC_INCLUDE_DIR=${{ github.workspace }}/_temp/libvlc_pkg/vlc-3.0.9.2/sdk/include" >> $GITHUB_ENV
          echo "LIBVLC_LIB_DIR=${{ github.workspace }}/_temp/libvlc_pkg/vlc-3.0.9.2/sdk/lib" >> $GITHUB_ENV
          echo "LL_BUILD=windows" >> $GITHUB_ENV
          echo "AUTOBUILD_VARIABLES_FILE=${{ github.workspace }}/autobuild.xml" >> $GITHUB_ENV
        shell: bash

      - name: Add autobuild to PATH
        run: |
          echo "${{ github.workspace }}/develop.py" >> $GITHUB_PATH
          echo "${{ github.workspace }}/autobuild" >> $GITHUB_PATH
        shell: bash

      - name: Configure with configure_firestorm.sh
        working-directory: ${{ github.workspace }}
        shell: bash
        run: |
          set -x
          if [[ "${{ github.event.inputs.enable_libvlc }}" == "true" ]]; then
            ./indra/scripts/configure_firestorm.sh --platform windows -- -A x64 \
              -DLL_TESTS:BOOL=FALSE \
              -DPACKAGE:BOOL=Off \
              -DMEDIAPLUGIN_LIBVLC:BOOL=ON \
              -DUSE_VLC:BOOL=ON \
              "-DLibVLC_INCLUDE_DIR=$LIBVLC_INCLUDE_DIR" \
              "-DLibVLC_LIBRARY=$LIBVLC_LIB_DIR/libvlc.lib" \
              "-DLibVLC_CORE_LIBRARY=$LIBVLC_LIB_DIR/libvlccore.lib"
          else
            ./indra/scripts/configure_firestorm.sh --platform windows -- -A x64 \
              -DLL_TESTS:BOOL=FALSE \
              -DPACKAGE:BOOL=Off \
              -DMEDIAPLUGIN_LIBVLC:BOOL=OFF \
              -DUSE_VLC:BOOL=OFF
          fi

      - name: Check Firestorm.sln
        shell: pwsh
        run: |
          if (Test-Path "build-vc170-64\Firestorm.sln") {
            Write-Output "✅ Firestorm.sln found."
          } else {
            Write-Output "❌ Firestorm.sln NOT found, generating with cmake..."
            cmake -S "${{ github.workspace }}/indra" -B "${{ github.workspace }}/build-vc170-64" -G "Visual Studio 17 2022" -A x64
          }

      - name: Build
        shell: pwsh
        run: |
          msbuild build-vc170-64\Firestorm.sln /p:Configuration=Release /m
