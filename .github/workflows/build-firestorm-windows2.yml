name: Build Firestorm Windows (No Package)

on:
  workflow_dispatch:
    inputs:
      branch_or_tag:
        description: 'Build target branch or tag (例: master または Firestorm_7.1.13)'
        required: true
        default: 'master'
      enable_libvlc:
        description: "Enable LibVLC support"
        required: true
        default: "true"
      libvlc_sdk_url:
        description: "URL of LibVLC SDK (7z/zip)"
        required: true
        default: "https://download.videolan.org/pub/videolan/vlc/3.0.9.2/win64/vlc-3.0.9.2-win64.7z"

jobs:
  build:
    runs-on: windows-2022

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch_or_tag }}
          submodules: recursive

      - name: Install Autobuild
        run: |
          choco install -y sevenzip git cmake python3
          pip install autobuild

      - name: Download variables.txt
        shell: pwsh
        run: |
          $url = "https://raw.githubusercontent.com/FirestormViewer/fs-build-variables/38e0e2c27dac75af6701f47eae95f583eac53613/variables"
          $dst = "$env:RUNNER_TEMP\variables"
          Invoke-WebRequest -Uri $url -OutFile $dst -UseBasicParsing
          echo "AUTOBUILD_VARIABLES_FILE=$dst" >> $env:GITHUB_ENV
          echo "AUTOBUILD_BUILD_ID=${{ github.run_id }}-${{ github.run_attempt }}" >> $env:GITHUB_ENV

      # configure_firestorm.sh を scripts/, indra/scripts/, indra/build-vc170-64/scripts/ に配置
      - name: Ensure configure_firestorm.sh in all expected locations
        shell: pwsh
        run: |
          # ソース候補
          $candidates = @(
            (Join-Path $env:GITHUB_WORKSPACE 'scripts\configure_firestorm.sh'),
            (Join-Path $env:GITHUB_WORKSPACE 'indra\scripts\configure_firestorm.sh'),
            (Join-Path $env:GITHUB_WORKSPACE 'phoenix-firestorm\scripts\configure_firestorm.sh')
          )
          $src = $null
          foreach ($c in $candidates) { if (Test-Path $c) { $src = $c; break } }
          if (-not $src) {
            $raw = 'https://raw.githubusercontent.com/FirestormViewer/phoenix-firestorm/master/scripts/configure_firestorm.sh'
            $src = Join-Path $env:RUNNER_TEMP 'configure_firestorm.sh'
            Invoke-WebRequest -Uri $raw -OutFile $src -UseBasicParsing
            Write-Host "Fetched configure_firestorm.sh from remote."
          }

          # 配置先（build ディレクトリも先に作る）
          $destinations = @(
            (Join-Path $env:GITHUB_WORKSPACE 'scripts\configure_firestorm.sh'),
            (Join-Path $env:GITHUB_WORKSPACE 'indra\scripts\configure_firestorm.sh'),
            (Join-Path $env:GITHUB_WORKSPACE 'indra\build-vc170-64\scripts\configure_firestorm.sh')
          )
          New-Item -ItemType Directory -Force -Path (Join-Path $env:GITHUB_WORKSPACE 'indra\build-vc170-64\newview') | Out-Null

          # 自己コピー回避
          $srcReal = (Resolve-Path $src).Path
          foreach ($dst in $destinations) {
            New-Item -ItemType Directory -Force -Path (Split-Path $dst) | Out-Null
            $dstReal = (Resolve-Path $dst -ErrorAction SilentlyContinue)?.Path
            if ($dstReal -and ($srcReal -ieq $dstReal)) {
              Write-Host "Skip copying to $dst (same as source)."
            } else {
              Copy-Item $src $dst -Force
              Write-Host "Copied to $dst"
            }
          }

          # 改行LF/UTF-8(no BOM) & 実行権限
          foreach ($t in $destinations) {
            if (Test-Path $t) {
              $raw = Get-Content $t -Raw
              $lf  = $raw -replace "`r`n","`n"
              Set-Content -Path $t -Value $lf -NoNewline -Encoding utf8NoBOM
            }
          }
          & 'C:\Program Files\Git\bin\bash.exe' -lc "chmod +x 'scripts/configure_firestorm.sh' 'indra/scripts/configure_firestorm.sh' 'indra/build-vc170-64/scripts/configure_firestorm.sh' || true"

      - name: Fetch LibVLC SDK (7z/zip)
        if: ${{ github.event.inputs.enable_libvlc == 'true' }}
        shell: pwsh
        run: |
          $url = "${{ github.event.inputs.libvlc_sdk_url }}"
          $dst = "$env:RUNNER_TEMP\libvlc_pkg"
          $zip = "$dst\pkg"
          New-Item -ItemType Directory -Force -Path $dst | Out-Null
          $fname = "$dst\$(Split-Path $url -Leaf)"
          Invoke-WebRequest -Uri $url -OutFile $fname -UseBasicParsing
          if ($fname.ToLower().EndsWith(".7z")) {
            & "C:\Program Files\7-Zip\7z.exe" x $fname "-o$zip" -y | Out-Null
          } else {
            Expand-Archive -Path $fname -DestinationPath $zip -Force
          }
          $inc = Get-ChildItem -Recurse -Path $zip -Directory | Where-Object { Test-Path (Join-Path $_.FullName "vlc\vlc.h") } | Select-Object -First 1
          $libdir = Get-ChildItem -Recurse -Path $zip -Directory | Where-Object { (Test-Path (Join-Path $_.FullName "libvlc.lib")) -and (Test-Path (Join-Path $_.FullName "libvlccore.lib")) } | Select-Object -First 1
          $dlldir = Get-ChildItem -Recurse -Path $zip -Directory | Where-Object { (Get-ChildItem -Path $_.FullName -Filter "libvlc.dll" -ErrorAction SilentlyContinue).Count -gt 0 } | Select-Object -First 1
          if ($inc -and $libdir) {
            echo "LIBVLC_INCLUDE_DIR=$($inc.FullName)" >> $env:GITHUB_ENV
            echo "LIBVLC_LIB_DIR=$($libdir.FullName)" >> $env:GITHUB_ENV
            echo "LIBVLC_DETECTED=1" >> $env:GITHUB_ENV
          } else {
            echo "LIBVLC_DETECTED=0" >> $env:GITHUB_ENV
          }
          if ($dlldir) { echo "PATH=$($dlldir.FullName);$env:PATH" >> $env:GITHUB_ENV }

      # 失敗しても落ちない可視化（どこからでも見えるか）
      - name: Sanity check (non-fatal)
        shell: bash
        run: |
          set +e
          for d in "indra/newview" "indra/build-vc170-64/newview"; do
            echo "== $d =="; (cd "$d" && pwd; ls -l ../scripts/configure_firestorm.sh || echo "NOT FOUND")
          done
          true

      # autobuild は途中で build-vc170-64/newview に降りるので ../scripts がそこを向いてもOKになる
      - name: Configure (with/without LibVLC)
        shell: pwsh
        working-directory: ./indra
        run: |
          if ($env:LIBVLC_DETECTED -ne "0") {
            autobuild configure -A 64 -c ReleaseFS_open --platform windows -- `
              --with-libvlc-includes="$env:LIBVLC_INCLUDE_DIR" `
              --with-libvlc-libs="$env:LIBVLC_LIB_DIR" `
              -- -DPACKAGE:BOOL=Off
          } else {
            autobuild configure -A 64 -c ReleaseFS_open --platform windows -- -DPACKAGE:BOOL=Off
          }

      - name: Build
        working-directory: ./indra
        run: autobuild build -c ReleaseFS_open -A 64 --no-configure -- /m:1 /v:m "/clp:ErrorsOnly;Summary"

      - name: Upload unpackaged viewer
        uses: actions/upload-artifact@v4
        with:
          name: firestorm-unpackaged
          path: indra/build-vc170-64/newview/Release
