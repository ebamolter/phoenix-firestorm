name: Build Firestorm Windows (No Package)

on:
  workflow_dispatch:
    inputs:
      branch_or_tag:
        description: 'Build target branch or tag (例: master または Firestorm_7.1.13)'
        required: true
        default: 'master'
      enable_libvlc:
        description: "Enable LibVLC support"
        required: true
        default: "true"
      libvlc_sdk_url:
        description: "URL of LibVLC SDK (7z/zip)"
        required: true
        default: "https://download.videolan.org/pub/videolan/vlc/3.0.9.2/win64/vlc-3.0.9.2-win64.7z"

jobs:
  build:
    runs-on: windows-2022

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch_or_tag }}
          submodules: recursive

      - name: Install Autobuild
        run: |
          choco install -y sevenzip git cmake python3
          pip install autobuild

      # 公式 variables を取得して AUTOBUILD_VARIABLES_FILE を設定
      - name: Download variables.txt
        shell: pwsh
        run: |
          $url = "https://raw.githubusercontent.com/FirestormViewer/fs-build-variables/38e0e2c27dac75af6701f47eae95f583eac53613/variables"
          $dst = "$env:RUNNER_TEMP\variables"
          Invoke-WebRequest -Uri $url -OutFile $dst -UseBasicParsing
          echo "AUTOBUILD_VARIABLES_FILE=$dst" >> $env:GITHUB_ENV
          echo "AUTOBUILD_BUILD_ID=${{ github.run_id }}-${{ github.run_attempt }}" >> $env:GITHUB_ENV

      - name: Resolve configure_firestorm.sh absolute path
        shell: pwsh
        run: |
          $cfg = Join-Path $env:GITHUB_WORKSPACE "scripts\configure_firestorm.sh"
          if (!(Test-Path $cfg)) {
            Write-Error "scripts\configure_firestorm.sh が見つかりません。リポジトリを確認してください。"
          }
          # Git Bash で直接実行されるので実行権限は一応付与
          & "C:\Program Files\Git\bin\bash.exe" -lc "chmod +x '${cfg.Replace('\','/')}' || true"
          echo "CONFIG_SCRIPT=$cfg" >> $env:GITHUB_ENV

      - name: Fetch LibVLC SDK (7z/zip)
        if: ${{ github.event.inputs.enable_libvlc == 'true' }}
        shell: pwsh
        run: |
          $url = "${{ github.event.inputs.libvlc_sdk_url }}"
          $dst = "$env:RUNNER_TEMP\libvlc_pkg"
          $zip = "$dst\pkg"
          New-Item -ItemType Directory -Force -Path $dst | Out-Null
          $fname = "$dst\$(Split-Path $url -Leaf)"
          Invoke-WebRequest -Uri $url -OutFile $fname -UseBasicParsing
          if ($fname.ToLower().EndsWith(".7z")) {
            & "C:\Program Files\7-Zip\7z.exe" x $fname "-o$zip" -y | Out-Null
          } else {
            Expand-Archive -Path $fname -DestinationPath $zip -Force
          }
          $inc = Get-ChildItem -Recurse -Path $zip -Directory | Where-Object {
            Test-Path (Join-Path $_.FullName "vlc\vlc.h")
          } | Select-Object -First 1
          $libdir = Get-ChildItem -Recurse -Path $zip -Directory | Where-Object {
            (Test-Path (Join-Path $_.FullName "libvlc.lib")) -and (Test-Path (Join-Path $_.FullName "libvlccore.lib"))
          } | Select-Object -First 1
          $dlldir = Get-ChildItem -Recurse -Path $zip -Directory | Where-Object {
            (Get-ChildItem -Path $_.FullName -Filter "libvlc.dll" -ErrorAction SilentlyContinue).Count -gt 0
          } | Select-Object -First 1
          if ($inc -and $libdir) {
            echo "LIBVLC_INCLUDE_DIR=$($inc.FullName)" >> $env:GITHUB_ENV
            echo "LIBVLC_LIB_DIR=$($libdir.FullName)" >> $env:GITHUB_ENV
          }
          if ($dlldir) { echo "PATH=$($dlldir.FullName);$env:PATH" >> $env:GITHUB_ENV }

      - name: Configure (with/without LibVLC) using absolute --config-script
        shell: pwsh
        run: |
          $cfg = $env:CONFIG_SCRIPT
          if ($env:LIBVLC_INCLUDE_DIR -and $env:LIBVLC_LIB_DIR) {
            autobuild configure -A 64 -c ReleaseFS_open --platform windows -- `
              --config-script="$cfg" `
              --with-libvlc-includes="$env:LIBVLC_INCLUDE_DIR" `
              --with-libvlc-libs="$env:LIBVLC_LIB_DIR" `
              -- -DPACKAGE:BOOL=Off
          } else {
            autobuild configure -A 64 -c ReleaseFS_open --platform windows -- `
              --config-script="$cfg" `
              -- -DPACKAGE:BOOL=Off
          }

      - name: Build
        run: autobuild build -c ReleaseFS_open -A 64 --no-configure -- /m:1 /v:m "/clp:ErrorsOnly;Summary"

      - name: Upload unpackaged viewer
        uses: actions/upload-artifact@v4
        with:
          name: firestorm-unpackaged
          path: indra/build-vc170-64/newview/Release
