name: Build Firestorm Windows (No Package)

on:
  workflow_dispatch:
    inputs:
      branch_or_tag:
        description: 'Build target branch or tag (例: master または Firestorm_7.1.13)'
        required: true
        default: 'master'
      enable_libvlc:
        description: "Enable LibVLC support"
        required: true
        default: "true"
      libvlc_sdk_url:
        description: "URL of LibVLC SDK (7z/zip)"
        required: true
        default: "https://download.videolan.org/pub/videolan/vlc/3.0.9.2/win64/vlc-3.0.9.2-win64.7z"

jobs:
  build:
    runs-on: windows-2022

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch_or_tag }}
          submodules: recursive

      - name: Install Autobuild
        run: |
          choco install -y sevenzip git cmake python3
          pip install autobuild

      - name: Download variables.txt
        shell: pwsh
        run: |
          $url = "https://raw.githubusercontent.com/FirestormViewer/fs-build-variables/38e0e2c27dac75af6701f47eae95f583eac53613/variables"
          $dst = "$env:RUNNER_TEMP\variables"
          Invoke-WebRequest -Uri $url -OutFile $dst -UseBasicParsing
          echo "AUTOBUILD_VARIABLES_FILE=$dst" >> $env:GITHUB_ENV
          echo "AUTOBUILD_BUILD_ID=${{ github.run_id }}-${{ github.run_attempt }}" >> $env:GITHUB_ENV

      # scripts/, indra/scripts/, indra/build-vc170-64/scripts/ に配置（自己コピーはスキップ）
      - name: Ensure configure_firestorm.sh in all expected locations
        shell: pwsh
        run: |
          $candidates = @(
            (Join-Path $env:GITHUB_WORKSPACE 'scripts\configure_firestorm.sh'),
            (Join-Path $env:GITHUB_WORKSPACE 'indra\scripts\configure_firestorm.sh'),
            (Join-Path $env:GITHUB_WORKSPACE 'phoenix-firestorm\scripts\configure_firestorm.sh')
          )
          $src = $null
          foreach ($c in $candidates) { if (Test-Path $c) { $src = $c; break } }
          if (-not $src) {
            $raw = 'https://raw.githubusercontent.com/FirestormViewer/phoenix-firestorm/master/scripts/configure_firestorm.sh'
            $src = Join-Path $env:RUNNER_TEMP 'configure_firestorm.sh'
            Invoke-WebRequest -Uri $raw -OutFile $src -UseBasicParsing
            Write-Host "Fetched configure_firestorm.sh from remote."
          }

          $dests = @(
            (Join-Path $env:GITHUB_WORKSPACE 'scripts\configure_firestorm.sh'),
            (Join-Path $env:GITHUB_WORKSPACE 'indra\scripts\configure_firestorm.sh'),
            (Join-Path $env:GITHUB_WORKSPACE 'indra\build-vc170-64\scripts\configure_firestorm.sh')
          )

          $srcReal = (Resolve-Path $src).Path
          foreach ($d in $dests) {
            New-Item -ItemType Directory -Force -Path (Split-Path $d) | Out-Null
            $dstReal = (Resolve-Path $d -ErrorAction SilentlyContinue)?.Path
            if ($dstReal -and ($srcReal -ieq $dstReal)) {
              Write-Host "Skip copying to $d (same as source)."
            } else {
              Copy-Item $src $d -Force
              Write-Host "Copied to $d"
            }
          }

          foreach ($d in $dests) {
            if (Test-Path $d) {
              $raw = Get-Content $d -Raw
              $lf  = $raw -replace "`r`n","`n"
              Set-Content -Path $d -Value $lf -NoNewline -Encoding utf8NoBOM
            }
          }
          & 'C:\Program Files\Git\bin\bash.exe' -lc "chmod +x 'scripts/configure_firestorm.sh' 'indra/scripts/configure_firestorm.sh' 'indra/build-vc170-64/scripts/configure_firestorm.sh' || true"

      - name: Fetch LibVLC SDK (7z/zip)
        if: ${{ github.event.inputs.enable_libvlc == 'true' }}
        shell: pwsh
        run: |
          $url = "${{ github.event.inputs.libvlc_sdk_url }}"
          $dst = "$env:RUNNER_TEMP\libvlc_pkg"
          $zip = "$dst\pkg"
          New-Item -ItemType Directory -Force -Path $dst | Out-Null
          $fname = "$dst\$(Split-Path $url -Leaf)"
          Invoke-WebRequest -Uri $url -OutFile $fname -UseBasicParsing
          if ($fname.ToLower().EndsWith(".7z")) {
            & "C:\Program Files\7-Zip\7z.exe" x $fname "-o$zip" -y | Out-Null
          } else {
            Expand-Archive -Path $fname -DestinationPath $zip -Force
          }
          $inc = Get-ChildItem -Recurse -Path $zip -Directory | Where-Object { Test-Path (Join-Path $_.FullName "vlc\vlc.h") } | Select-Object -First 1
          $libdir = Get-ChildItem -Recurse -Path $zip -Directory | Where-Object { (Test-Path (Join-Path $_.FullName "libvlc.lib")) -and (Test-Path (Join-Path $_.FullName "libvlccore.lib")) } | Select-Object -First 1
          $dlldir = Get-ChildItem -Recurse -Path $zip -Directory | Where-Object { (Get-ChildItem -Path $_.FullName -Filter "libvlc.dll" -ErrorAction SilentlyContinue).Count -gt 0 } | Select-Object -First 1
          if ($inc -and $libdir) {
            echo "LIBVLC_INCLUDE_DIR=$($inc.FullName)" >> $env:GITHUB_ENV
            echo "LIBVLC_LIB_DIR=$($libdir.FullName)" >> $env:GITHUB_ENV
            echo "LIBVLC_DETECTED=1" >> $env:GITHUB_ENV
          } else {
            echo "LIBVLC_DETECTED=0" >> $env:GITHUB_ENV
          }
          if ($dlldir) { echo "PATH=$($dlldir.FullName);$env:PATH" >> $env:GITHUB_ENV }

      # ===== デバッグ 1: variables 内の参照と環境の確認 =====
      - name: Debug: dump variables and env
        shell: pwsh
        run: |
          "AUTOBUILD_VARIABLES_FILE = $env:AUTOBUILD_VARIABLES_FILE"
          "GITHUB_WORKSPACE        = $env:GITHUB_WORKSPACE"
          ""
          "=== lines mentioning configure_firestorm.sh in variables ==="
          if (Test-Path $env:AUTOBUILD_VARIABLES_FILE) {
            Get-Content $env:AUTOBUILD_VARIABLES_FILE | Select-String -SimpleMatch 'configure_firestorm.sh','--config' | ForEach-Object { $_.Line }
          } else {
            "variables file not found"
          }

      # ===== デバッグ 2: 代表的な作業ディレクトリからの見え方を確認 =====
      - name: Debug: check visibility from dirs
        shell: bash
        run: |
          set +e
          for d in "." "indra" "indra/newview" "indra/build-vc170-64/newview"; do
            echo "------------------------------"
            echo "DIR => $d"
            mkdir -p "$d" >/dev/null 2>&1
            ( cd "$d" && pwd
              echo "ls ../scripts:"
              ls -l ../scripts 2>/dev/null || echo "NO ../scripts"
              if [ -f ../scripts/configure_firestorm.sh ]; then
                ls -l ../scripts/configure_firestorm.sh
                # CRLF検出
                if grep -q $'\r' ../scripts/configure_firestorm.sh; then echo "NOTE: CRLF detected"; else echo "LF OK"; fi
                # シンタックスチェック
                bash -n ../scripts/configure_firestorm.sh && echo "bash -n OK" || echo "bash -n FAILED $?"
              else
                echo "NOT FOUND: ../scripts/configure_firestorm.sh"
              fi
            )
          done
          true

      # ===== デバッグ 3: 実際に実行して終了コードを拾う（失敗しても続行） =====
      - name: Debug: try run configure script
        shell: bash
        working-directory: ./indra/newview
        run: |
          set +e
          echo "pwd: $(pwd)"
          if [ -f ../scripts/configure_firestorm.sh ]; then
            echo "running: bash ../scripts/configure_firestorm.sh --help"
            bash ../scripts/configure_firestorm.sh --help >/dev/null 2>&1
            echo "exit=$?"
          else
            echo "NOT FOUND from here: ../scripts/configure_firestorm.sh"
          fi
          true

      - name: Configure (with/without LibVLC)
        shell: pwsh
        working-directory: ./indra
        run: |
          if ($env:LIBVLC_DETECTED -ne "0") {
            autobuild configure -A 64 -c ReleaseFS_open --platform windows -- `
              --with-libvlc-includes="$env:LIBVLC_INCLUDE_DIR" `
              --with-libvlc-libs="$env:LIBVLC_LIB_DIR" `
              -- -DPACKAGE:BOOL=Off
          } else {
            autobuild configure -A 64 -c ReleaseFS_open --platform windows -- -DPACKAGE:BOOL=Off
          }

      - name: Build
        working-directory: ./indra
        run: autobuild build -c ReleaseFS_open -A 64 --no-configure -- /m:1 /v:m "/clp:ErrorsOnly;Summary"

      - name: Upload unpackaged viewer
        uses: actions/upload-artifact@v4
        with:
          name: firestorm-unpackaged
          path: indra/build-vc170-64/newview/Release
