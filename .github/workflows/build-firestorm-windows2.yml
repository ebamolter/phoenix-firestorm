name: Build Firestorm Windows (No Package)

on:
  workflow_dispatch:
    inputs:
      branch_or_tag:
        description: 'Build target branch or tag (e.g., master or Firestorm_7.1.13)'
        required: true
        default: 'master'
      enable_libvlc:
        description: "Enable LibVLC support"
        required: true
        default: "true"
      libvlc_sdk_url:
        description: "URL of LibVLC SDK (7z/zip)"
        required: true
        default: "https://download.videolan.org/pub/videolan/vlc/3.0.9.2/win64/vlc-3.0.9.2-win64.7z"

jobs:
  build:
    runs-on: windows-2022

    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set AUTOBUILD_VARIABLES_FILE
        run: echo "AUTOBUILD_VARIABLES_FILE=variables.txt" >> $env:GITHUB_ENV
        shell: pwsh

      - name: Install Autobuild & Requirements
        run: |
          choco install 7zip --no-progress
          choco install git -y --no-progress
        shell: powershell

      - name: Fetch LibVLC SDK (7z/zip)
        if: ${{ inputs.enable_libvlc == 'true' }}
        run: |
          $url = "${{ inputs.libvlc_sdk_url }}"
          $dst = "$env:RUNNER_TEMP\libvlc_pkg"
          $zip = "$dst\pkg"
          New-Item -ItemType Directory -Force -Path $dst | Out-Null
          $fname = "$dst\$(Split-Path $url -Leaf)"
          Invoke-WebRequest -Uri $url -OutFile $fname -UseBasicParsing

          if ($fname.ToLower().EndsWith(".7z")) {
            & "C:\Program Files\7-Zip\7z.exe" x $fname "-o$zip" -y | Out-Null
          } else {
            Expand-Archive -Path $fname -DestinationPath $zip -Force
          }

          $inc = Get-ChildItem -Recurse -Path $zip -Directory | Where-Object {
            Test-Path (Join-Path $_.FullName "vlc\vlc.h")
          } | Select-Object -First 1

          $libdir = Get-ChildItem -Recurse -Path $zip -Directory | Where-Object {
            Test-Path (Join-Path $_.FullName "libvlc.lib") -and Test-Path (Join-Path $_.FullName "libvlccore.lib")
          } | Select-Object -First 1

          $dlldir = Get-ChildItem -Recurse -Path $zip -Directory | Where-Object {
            (Get-ChildItem -Path $_.FullName -Filter "libvlc.dll" -ErrorAction SilentlyContinue).Count -gt 0
          } | Select-Object -First 1

          if ($inc -and $libdir) {
            echo "LIBVLC_INCLUDE_DIR=$($inc.FullName)" | Out-File -Append -Encoding ascii $env:GITHUB_ENV
            echo "LIBVLC_LIB_DIR=$($libdir.FullName)" | Out-File -Append -Encoding ascii $env:GITHUB_ENV
            echo "LIBVLC_DETECTED=1" | Out-File -Append -Encoding ascii $env:GITHUB_ENV
          } else {
            echo "LIBVLC_DETECTED=0" | Out-File -Append -Encoding ascii $env:GITHUB_ENV
          }

          if ($dlldir) {
            echo "PATH=$($dlldir.FullName);$env:PATH" | Out-File -Append -Encoding ascii $env:GITHUB_ENV
          }
        shell: pwsh

      - name: Configure with configure_firestorm.sh
        shell: bash
        run: |
          if [[ "$LIBVLC_DETECTED" == "1" ]]; then
            ./indra/scripts/configure_firestorm.sh -A 64 -c ReleaseFS_open -- \
              -DLL_TESTS:BOOL=FALSE \
              -DPACKAGE:BOOL=Off \
              -DMEDIAPLUGIN_LIBVLC:BOOL=ON \
              -DUSE_VLC:BOOL=ON \
              "-DLibVLC_INCLUDE_DIR=$LIBVLC_INCLUDE_DIR" \
              "-DLibVLC_LIBRARY=$LIBVLC_LIB_DIR/libvlc.lib" \
              "-DLibVLC_CORE_LIBRARY=$LIBVLC_LIB_DIR/libvlccore.lib"
          else
            ./indra/scripts/configure_firestorm.sh -A 64 -c ReleaseFS_open -- \
              -DLL_TESTS:BOOL=FALSE \
              -DPACKAGE:BOOL=Off \
              -DMEDIAPLUGIN_LIBVLC:BOOL=OFF \
              -DUSE_VLC:BOOL=OFF

      - name: Build
        run: autobuild build -A 64 -c ReleaseFS_open --no-configure -- /m:1 /v:m "/clp:ErrorsOnly;Summary"
        shell: pwsh
