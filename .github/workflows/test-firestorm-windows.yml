name: Build Firestorm Windows Test

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch or tag to build (例: 7.2.0_preview / Firestorm_7.1.13)'
        required: true
        default: '7.2.0_preview'
      create_package:
        description: 'Create installer/package? (容量・時間が増大します)'
        required: true
        default: 'false'

jobs:
  build-linux:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          repository: FirestormViewer/phoenix-firestorm
          ref: ${{ github.event.inputs.branch }}

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y python3 python3-pip build-essential cmake ninja-build \
            libgl1-mesa-dev libglu1-mesa-dev libxrandr-dev libxinerama-dev \
            libxcursor-dev libxi-dev uuid-dev libssl-dev libxml2-dev \
            libpng-dev libjpeg-dev libtiff-dev libbz2-dev libapr1-dev \
            libaprutil1-dev libgoogle-perftools-dev

      - name: Prepare variables file
        run: |
          mkdir -p indra/build_secrets
          echo "AUTOBUILD_VARIABLES_CONTENT" > indra/build_secrets/variables

      - name: Upload variables file
        uses: actions/upload-artifact@v4
        with:
          name: variables
          path: indra/build_secrets/variables

  build-windows:
    needs: build-linux
    runs-on: windows-2022
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          repository: FirestormViewer/phoenix-firestorm
          ref: ${{ github.event.inputs.branch }}

      - name: Download variables file
        uses: actions/download-artifact@v4
        with:
          name: variables
          path: indra/build_secrets

      - name: Verify variables file
        run: dir indra\build_secrets

      - name: Install dependencies
        shell: pwsh
        run: |
          choco install git cmake python --yes
          refreshenv

      - name: Configure build
        shell: bash
        run: |
          autobuild configure -c ReleaseFS_open

      - name: Build
        shell: bash
        run: |
          autobuild build -c ReleaseFS_open -A 64 --no-configure

      - name: Package (optional)
        if: ${{ github.event.inputs.create_package == 'true' }}
        shell: bash
        run: |
          autobuild package -c ReleaseFS_open

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: firestorm-windows-build
          path: build-vc*/*
